---
- hosts: macs
  gather_facts: yes
  tasks:
    - name: Check user
      command: echo $USER
      register: current_user
      ignore_errors: true

    - name: Show user
      debug:
        var: current_user.stdout_lines

    - name: Get current shell for the user
      shell: echo $SHELL
      register: current_shell

    - name: Show shell
      debug:
        var: current_shell.stdout_lines

    - name: Check Homebrew version
      command: /opt/homebrew/bin/brew --version
      register: brew_version
      ignore_errors: true

    - name: Show Homebrew version
      debug:
        var: brew_version.stdout_lines

    - name: Install Homebrew Casks
      community.general.homebrew_cask:
        name: "{{ item }}"
        state: present
      with_items:
        - 1password
        - cheatsheet
        - firefox@developer-edition
        - iterm2
        - parallels
        - android-platform-tools
        - gather
        - keepassxc
        - tiles
        - visual-studio-code
        - docker
        - imazing-converter
        - obs
        - typora

    - name: Install Homebrew Formulae
      community.general.homebrew:
        name: "{{ item }}"
        state: present
      with_items:
        - ansible
        - ffmpeg
        - fish
        - midnight-commander
        - bpytop
        - neofetch
        - mas

- name: Set default shell for a user
  hosts: macs
  vars_files:
    - secret.yml
  become: yes
  become_method: sudo
  gather_facts: yes
  tasks:
    - name: Change the default shell to fish
      ansible.builtin.user:
        name: janwennmann
        shell: /opt/homebrew/bin/fish

- name: Setup Homebrew path in fish shell for macOS
  hosts: macs
  gather_facts: yes

  tasks:
    - name: Check for Homebrew in /usr/local/bin
      stat:
        path: /usr/local/bin/brew
      register: brew_local

    - name: Check for Homebrew in /opt/homebrew/bin
      stat:
        path: /opt/homebrew/bin/brew
      register: brew_opt

    - name: Ensure Homebrew path for fish shell on Intel Macs
      lineinfile:
        path: "{{ ansible_env.HOME }}/.config/fish/config.fish"
        line: "set -gx PATH /usr/local/bin $PATH"
        create: yes
        state: present
        regexp: '^set -gx PATH /usr/local/bin \$PATH'
        backup: yes
      when: brew_local.stat.exists and (ansible_facts['architecture'] == 'x86_64')

    - name: Ensure Homebrew path for fish shell on Apple Silicon
      lineinfile:
        path: "{{ ansible_env.HOME }}/.config/fish/config.fish"
        line: "set -gx PATH /opt/homebrew/bin $PATH"
        create: yes
        state: present
        regexp: '^set -gx PATH /opt/homebrew/bin \$PATH'
        backup: yes
      when: brew_opt.stat.exists and (ansible_facts['architecture'] == 'arm64' or ansible_facts['architecture'] == 'aarch64')